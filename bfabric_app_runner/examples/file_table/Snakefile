from file_table_app.compute_file_info import write_file_info_yaml
from file_table_app.collect_info import write_index_markdown
from pathlib import Path
from zipfile import ZipFile
import yaml

input_file_paths = sorted(Path("input").glob("*"))
input_file_names = [p.name for p in input_file_paths]

rule file_info_yaml:
    input:
        file="input/{file}"
    output:
        yml="info/{file}.yml"
    run:
        write_file_info_yaml(input.file, output.yml)


rule index_markdown:
    input:
        files=expand("info/{name}.yml", name=input_file_names)
    output:
        md="index.md"
    run:
        write_index_markdown(input.files, output.md)


rule output_zip:
    input:
        md=rules.index_markdown.output.md,
    output:
        zip="output.zip"
    run:
        with ZipFile(output.zip, mode="w") as zip:
            zip.write("index.md", input.md)

rule outputs_yml:
    input:
        zip=rules.output_zip.output.zip,
    output:
        yml="outputs.yml",
    run:
        content = {
            "outputs": [
                {
                    "type": "bfabric_copy_resource",
                    "local_path": str(Path(input.zip).resolve()),
                    "store_entry_path": "file_info.zip",
                }
            ]
        }
        Path(output.yml).write_text(yaml.safe_dump(content))
